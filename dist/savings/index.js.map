{"version":3,"sources":["../../src/savings/index.js"],"names":["BBSavings","accountsUrl","BASE_ENDPOINT","headers","DEFAULT_HEADERS","cookie","LoginCookie","getGlobal","response","text","json","JSON","parse","sessions","conteiner","telas","sessoes","title","cabecalho","variations","celulas","map","c","acao","split","splice","v","BBSavingsAccount","variation","parseInt","description"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;IAEqBA,S;;;;;;;;uGACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,gBAAAA,WADR,GACsB,gCADtB;AAAA;AAAA,uBAGyB,qCAASC,wBAAT,SAAyBD,WAAzB,GAAwC;AAC7DE,kBAAAA,OAAO,kCACFC,0BADE;AAELC,oBAAAA,MAAM,EAAEC,wBAAYC,SAAZ;AAFH;AADsD,iBAAxC,CAHzB;;AAAA;AAGQC,gBAAAA,QAHR;AAAA;AAAA,uBAUqBA,QAAQ,CAACC,IAAT,EAVrB;;AAAA;AAUQA,gBAAAA,IAVR;AAWQC,gBAAAA,IAXR,GAWeC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAXf;AAaQI,gBAAAA,QAbR,GAamBH,IAAI,CAACI,SAAL,CAAeC,KAAf,CAAqB,CAArB,EAAwBC,OAAxB,CAAgC,CAAhC,CAbnB;AAcQC,gBAAAA,KAdR,GAcgBJ,QAAQ,CAACK,SAdzB;AAeQC,gBAAAA,UAfR,GAeqBN,QAAQ,CAACO,OAAT,CAAiBC,GAAjB,CACjB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACC,IAAF,CAAOC,KAAP,CAAa,WAAb,EAA0BC,MAA1B,CAAiC,CAAC,CAAlC,EAAqC,CAArC,CAAJ;AAAA,iBADgB,CAfrB;AAAA,iDAmBSN,UAAU,CAACE,GAAX,CACL,UAAAK,CAAC;AAAA,yBACC,IAAIC,0BAAJ,CAAqB;AACnBC,oBAAAA,SAAS,EAAEC,QAAQ,CAACH,CAAD,EAAI,EAAJ,CADA;AAEnBI,oBAAAA,WAAW,YAAKb,KAAL,+BAAyBS,CAAzB;AAFQ,mBAArB,CADD;AAAA,iBADI,CAnBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O","sourcesContent":["import fetch from 'node-fetch';\nimport LoginCookie from '../loginCookie';\nimport { BASE_ENDPOINT, DEFAULT_HEADERS } from '../constants';\nimport BBSavingsAccount from './savingsAccount';\n\nexport default class BBSavings {\n  async getAccounts() {\n    const accountsUrl = 'tela/ExtratoDePoupanca/entrada';\n\n    const response = await fetch(`${BASE_ENDPOINT}${accountsUrl}`, {\n      headers: {\n        ...DEFAULT_HEADERS,\n        cookie: LoginCookie.getGlobal(),\n      },\n    });\n\n    const text = await response.text();\n    const json = JSON.parse(text);\n\n    const sessions = json.conteiner.telas[0].sessoes[0];\n    const title = sessions.cabecalho;\n    const variations = sessions.celulas.map(\n      c => c.acao.split('variacao=').splice(-1)[0],\n    );\n\n    return variations.map(\n      v =>\n        new BBSavingsAccount({\n          variation: parseInt(v, 10),\n          description: `${title} - Variação ${v}`,\n        }),\n    );\n  }\n}\n"],"file":"index.js"}